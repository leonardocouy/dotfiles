#!/bin/bash -e

# ---------------------------------
# Utility Functions
# ---------------------------------

reload() {
  source "$HOME/.bash_profile"
}

search() {
  searchin . "$@"
}

searchin () {
  find "$1" -type f -print0 |
    xargs -0 grep -l "$2"
}

code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ; }

# Show all the names (CNs and SANs) listed in the SSL certificate
# for a given domain
getcertnames() {
  if [ -z "${1}" ]; then
    echo "ERROR: No domain specified."
    return 1
  fi

  local domain="${1}"
  echo "Testing ${domain}â€¦"
  echo # newline

  local tmp=$(echo -e "GET / HTTP/1.0\nEOT" \
    | openssl s_client -connect "${domain}:443" 2>&1);

  if [[ "${tmp}" = *"-----BEGIN CERTIFICATE-----"* ]]; then
    local certText=$(echo "${tmp}" \
      | openssl x509 -text -certopt "no_header, no_serial, no_version, \
      no_signame, no_validity, no_issuer, no_pubkey, no_sigdump, no_aux");
      echo "Common Name:"
      echo # newline
      echo "${certText}" | grep "Subject:" | sed -e "s/^.*CN=//";
      echo # newline
      echo "Subject Alternative Name(s):"
      echo # newline
      echo "${certText}" | grep -A 1 "Subject Alternative Name:" \
        | sed -e "2s/DNS://g" -e "s/ //g" | tr "," "\n" | tail -n +2
      return 0
  else
    echo "ERROR: Certificate not found.";
    return 1
  fi
}

# Kill processes by name
jkill() {
  local process=$@
  ps ax | grep "$process" | grep -v grep | awk '{print $1}' | xargs kill -9
}

### Docker
function dck_prune() {
  docker stop $(docker ps -a -q) && docker system prune -a -f --volumes
}

## Restore DB in specified docker container
function r_db_dck() {
  local dump_dir=~/dumps/$1
  local last_dump=$dump_dir/$(ls -p $dump_dir |head -n1|egrep -v /$)
  local db_container=$2

  docker-compose exec -T "${db_container}" psql -U postgres -c "SELECT PG_TERMINATE_BACKEND(pid) FROM pg_stat_activity WHERE pid <> PG_BACKEND_PID() AND datname = '$1';"
  docker-compose exec -T "${db_container}" psql -U postgres -c "DROP DATABASE IF EXISTS $1;"
  docker-compose exec -T "${db_container}" psql -U postgres -c "CREATE DATABASE $1;"
  docker-compose exec -T "${db_container}" pg_restore --verbose --no-acl --no-owner -U postgres -d "$1" < "${last_dump}"
}


### SQL

function restore_db(){
  echo $1
  echo "======================"
  psql -c "SELECT PG_TERMINATE_BACKEND(pid) FROM pg_stat_activity WHERE pid <> PG_BACKEND_PID() AND datname = '$1';"
  psql -c "DROP DATABASE IF EXISTS $1;"
  psql -c "CREATE DATABASE $1;"

  pg_restore --verbose -d $1 -h localhost --no-acl --no-owner $2
}

# This should be the last line of the file
# For local changes
# Don't make edits below this
[ -f "$HOME/.presets/.functions.local" ] && source "$HOME/.presets/.functions.local"
